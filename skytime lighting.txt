struct SkyStuff {
	float Shadow; // 0xF0;
	float ShadowCorruptDistance; // 0x12C;
	float ShadowRed; // 0x20D;
	float ShadowGreen; // 0x21D;
	float ShadowBlue; // 0x12C;
	float Red; // 0x2A8;
	float Green; // 0x2AC;
	float Blue; // 0x2B0;
	float Power; // 0x2CC;
	float PowerValue; // 0x2D0;
	float Sky; // 0x2D4;
	float ShadowDistance; // 0x2F8;
	float LightingThroughWalls; // 0x366;
} skystuff;
 
class Sky
{
public:
	uint64_t NightMode()
	{
		if (globals.Night)
		{
			uint64_t lightManager = driver::Read<uint64_t>(Base + 0x63F9CD0);
			if (!lightManager) return 0;
 
			uint64_t lightChain = driver::Read<uint64_t>(lightManager + 0x10);
			if (!lightChain) return 0;
 
			lightChain = driver::Read<uint64_t>(lightChain + 0x3F8);
			driver::Write<float>(lightChain + 0x2D4, 0.f); // setting sky time to 0 = :bigbrain:
		}
	}
} sky;